name: linters

on:
  pull_request:
    paths:
      - ".github/workflows/linters.yml"
      - "Makefile"
      - "**.py"
      - "pyproject.toml"
      - "poetry.lock"

jobs:
  black:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Poetry
        run: |
          make get-poetry
          echo $HOME/.poetry/bin >> $GITHUB_PATH

      - name: Set up Poetry cache
        uses: actions/cache@v2
        id: poetry-cache
        with:
          key: poetry-cache-v1-${{ hashFiles('**/poetry.lock') }}
          path: .venv

      - name: Install dependencies
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Lint with Black
        run: make black

  flake8:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Poetry
        run: |
          make get-poetry
          echo $HOME/.poetry/bin >> $GITHUB_PATH

      - name: Set up Poetry cache
        uses: actions/cache@v2
        id: poetry-cache
        with:
          key: poetry-cache-v1-${{ hashFiles('**/poetry.lock') }}
          path: .venv

      - name: Install dependencies
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Lint with Flake8
        run: make flake8

  isort:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Poetry
        run: |
          make get-poetry
          echo $HOME/.poetry/bin >> $GITHUB_PATH

      - name: Set up Poetry cache
        uses: actions/cache@v2
        id: poetry-cache
        with:
          key: poetry-cache-v1-${{ hashFiles('**/poetry.lock') }}
          path: .venv

      - name: Install dependencies
        if: steps.poetry-cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Lint with Isort
        run: make isort
